name: Export PTE (Llama 3.2 1B)

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
    paths:
      - 'models/**'
      - 'tools/**'
      - '.github/workflows/export-llama-pte.yml'

permissions:
  contents: read

concurrency:
  group: export-pte-${{ github.ref }}
  cancel-in-progress: false

jobs:
  export:
    runs-on: ubuntu-22.04
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { lfs: false }

      - name: Runner resources
        run: |
          set -euxo pipefail
          uname -a
          df -h
          free -h
          nproc

      - name: Setup Python
        uses: actions/setup-python@v5
        with: { python-version: '3.11' }

      - name: Install deps (ExecuTorch + tools)
        run: |
          set -euxo pipefail
          python -m pip install -U pip wheel
          sudo apt-get update
          git clone --depth 1 https://github.com/pytorch/executorch.git
          cd executorch
          pip install -r requirements.txt
          pip install -e .
          cd -
          pip install "transformers==4.43.*" "safetensors==0.4.*" psutil

      - name: HF auth (optional)
        if: ${{ secrets.HF_TOKEN != '' }}
        env: { HF_TOKEN: ${{ secrets.HF_TOKEN }} }
        run: |
          set -euxo pipefail
          mkdir -p ~/.huggingface
          printf "%s\n" "$HF_TOKEN" > ~/.huggingface/token
          echo "HF token configured"

      - name: Export model (capture log)
        run: |
          set -euxo pipefail
          mkdir -p artifacts logs
          python models/llama3.2-1b/export_pte.py 2>&1 | tee logs/export.log

      - name: Verify PTE (size/sha/partitions)
        run: |
          set -euxo pipefail
          python - << 'PY'
          import glob, os, hashlib, json, sys
          files = glob.glob("**/*.pte", recursive=True)
          assert files, "No .pte files found after export."
          info=[]
          for f in files:
            sz = os.path.getsize(f)
            assert sz > 10_000_000, f"PTE too small? {f} size={sz}"
            sha = hashlib.sha256(open(f,'rb').read()).hexdigest()
            info.append({"path":f,"size_mb": round(sz/1024/1024,1),"sha256":sha})
          # Optional: partitions>0 check
          try:
            from executorch.exir import EdgeProgram
            bad=[]
            for f in files:
              ep = EdgeProgram(open(f,'rb').read())
              if len(ep.programs)==0: bad.append(f)
            assert not bad, f"No partitions in: {bad}"
          except Exception as e:
            print("Partition check skipped or failed:", e, file=sys.stderr)
          os.makedirs("artifacts", exist_ok=True)
          open("artifacts/manifest.json","w").write(json.dumps(info, indent=2))
          print("OK manifest:", info)
          PY

      - name: Upload artifacts (pte + logs)
        uses: actions/upload-artifact@v4
        with:
          name: pte-export
          path: |
            **/*.pte
            artifacts/**
            logs/**
          if-no-files-found: error
